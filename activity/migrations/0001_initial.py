# Generated by Django 5.2.7 on 2025-10-31 09:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('hands_on', 'Hands-on'), ('performance', 'Performance'), ('exhibition', 'Exhibition'), ('lecture', 'Lecture'), ('workshop', 'Workshop')], max_length=20, verbose_name='Activity Type')),
                ('title', models.TextField(verbose_name='Title (Very Very Very Very Very Very Very Long)')),
                ('minimum_charge', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Minimum Charge')),
                ('currency', models.CharField(choices=[('JPY', '¥ JPY'), ('USD', '$ USD'), ('EUR', '€ EUR')], default='JPY', max_length=3, verbose_name='Currency')),
                ('help_text', models.CharField(blank=True, help_text='Additional guidance or notes for customers', max_length=100, verbose_name='Help Text')),
                ('price_included', models.TextField(blank=True, help_text='What is included in the price (e.g., meals, equipment)', verbose_name='Price Included')),
                ('provider', models.CharField(help_text='Company or person offering the activity', max_length=100, verbose_name='Provider')),
                ('participants', models.CharField(help_text='Possible number of bookings', max_length=50, verbose_name='Participants')),
                ('participating_age', models.CharField(help_text='e.g., 6+, 18+, All ages', max_length=50, verbose_name='Participating Age')),
                ('duration', models.CharField(help_text='e.g., 2 hours, Half day, 3 days', max_length=100, verbose_name='Duration')),
                ('description', models.TextField(help_text='Full description of the activity', verbose_name='Description')),
                ('plan_1', models.CharField(blank=True, help_text='Package options', max_length=100, verbose_name='Plan 1')),
                ('price_1', models.CharField(blank=True, help_text='Pricing tiers', max_length=100, verbose_name='Price 1')),
                ('summary_1', models.CharField(blank=True, help_text='Short highlight or tagline', max_length=100, verbose_name='Summary 1')),
                ('plan_2', models.CharField(blank=True, help_text='Package options', max_length=100, verbose_name='Plan 2')),
                ('price_2', models.CharField(blank=True, help_text='Pricing tiers', max_length=100, verbose_name='Price 2')),
                ('summary_2', models.CharField(blank=True, help_text='Short highlight or tagline', max_length=100, verbose_name='Summary 2')),
                ('plan_3', models.CharField(blank=True, help_text='Package options', max_length=100, verbose_name='Plan 3')),
                ('price_3', models.CharField(blank=True, help_text='Pricing tiers', max_length=100, verbose_name='Price 3')),
                ('summary_3', models.CharField(blank=True, help_text='Short highlight or tagline', max_length=100, verbose_name='Summary 3')),
                ('min_p', models.CharField(help_text='Minimum required to run the activity', max_length=100, verbose_name='Min. P')),
                ('reg_deadline', models.CharField(help_text='Registration Deadline', max_length=100, verbose_name='Deadline')),
                ('event_ends', models.DateField(verbose_name='Event Ends')),
                ('prefecture', models.CharField(choices=[('hokkaido', 'Hokkaido'), ('aomori', 'Aomori'), ('iwate', 'Iwate'), ('miyagi', 'Miyagi'), ('akita', 'Akita'), ('yamagata', 'Yamagata'), ('fukushima', 'Fukushima'), ('ibaraki', 'Ibaraki'), ('tochigi', 'Tochigi'), ('gunma', 'Gunma'), ('saitama', 'Saitama'), ('chiba', 'Chiba'), ('tokyo', 'Tokyo'), ('kanagawa', 'Kanagawa'), ('niigata', 'Niigata'), ('toyama', 'Toyama'), ('ishikawa', 'Ishikawa'), ('fukui', 'Fukui'), ('yamanashi', 'Yamanashi'), ('nagano', 'Nagano'), ('gifu', 'Gifu'), ('shizuoka', 'Shizuoka'), ('aichi', 'Aichi'), ('mie', 'Mie'), ('shiga', 'Shiga'), ('kyoto', 'Kyoto'), ('osaka', 'Osaka'), ('hyogo', 'Hyogo'), ('nara', 'Nara'), ('wakayama', 'Wakayama'), ('tottori', 'Tottori'), ('shimane', 'Shimane'), ('okayama', 'Okayama'), ('hiroshima', 'Hiroshima'), ('yamaguchi', 'Yamaguchi'), ('tokushima', 'Tokushima'), ('kagawa', 'Kagawa'), ('ehime', 'Ehime'), ('kochi', 'Kochi'), ('fukuoka', 'Fukuoka'), ('saga', 'Saga'), ('nagasaki', 'Nagasaki'), ('kumamoto', 'Kumamoto'), ('oita', 'Oita'), ('miyazaki', 'Miyazaki'), ('kagoshima', 'Kagoshima'), ('okinawa', 'Okinawa')], max_length=20, verbose_name='Prefecture')),
                ('lat', models.CharField(blank=True, max_length=100, null=True, verbose_name='Latitude')),
                ('lng', models.CharField(blank=True, max_length=100, null=True, verbose_name='Longitude')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='Address')),
                ('map_id', models.CharField(blank=True, help_text='Google Maps Place ID or custom ID', max_length=100, verbose_name='Map ID')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True, verbose_name='URL Slug')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivityImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='activities/%Y/%m/%d/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Caption')),
                ('order', models.PositiveIntegerField(db_index=True, default=0)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='activity.activity', verbose_name='Activity')),
            ],
            options={
                'verbose_name': 'Activity Image',
                'verbose_name_plural': 'Activity Images',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(max_length=200, verbose_name='Activity')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email Address')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('prefer_date', models.DateField(verbose_name='Preferred Date')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Submitted At')),
                ('activity_obj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='activity.activity')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-created_at'],
            },
        ),
    ]
